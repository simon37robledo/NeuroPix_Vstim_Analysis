

function fig = PlotRawData(NP,chan,startTimes,window,freq,type)
tic
raw_signal = squeeze(NP.getData(chan,startTimes,window));
toc
%raw_signal = squeeze(aaa(:,1,:));

%aaa = raw_signal;

fc = 300;

%%
% cd('D:\Mark_S13\Downloads')
% raw_signale = readNPY('Ch16_PV27_25_6_23_3.npy');
% raw_signale = squeeze(raw_signal);

if freq == "AP"
    [b, a] = butter(4, fc/(NP.samplingFrequency/2), 'high');
end



% nexttile;
% plot(t, raw_signale);
% title('Raw Neural Signal');
% xlabel('Time (s)');
% title('Py raw')
%
% nexttile;
% plot(t, signale);
% title('High-Pass Filtered Signal (Spikes Only)');
% xlabel('Time (s)');
% title('Py filtered')
%
fig = figure;
% Plot the raw and filtered signals
t = (0:length(raw_signal)-1) /NP.samplingFrequency;
offset = 2.5*mean(std(raw_signal));

nexttile;

if type == "line"

for tr = 81:90%size(raw_signal,1)

    signal = filtfilt(b, a, raw_signal(tr,:));

    j = size(raw_signal,1)-tr;
    plot(t, signal+offset*(j), 'LineWidth',0.5,'Color','k');
    hold on
end

yticks([])

xlim([0 length(raw_signal)/NP.samplingFrequency]);
lims = xlim;

limsY = ylim;
ylim([-300 limsY(2)-200]);


xticks([0 preBase/1000:300/1000:(stimDur+preBase*2)/1000 lims(end)-0.00001])
xticklabels([-(preBase) 0:300:round((stimDur/100))*100 round((stimDur/100))*100 + preBase]./1000)
xline([preBase/1000 (stimDur+preBase)/1000],LineWidth=1.5)
ylabel('10 Trials')
xlabel('Time (sec)')
fig.Position = [  1027         246         415         241];

end
cd('\\sil3\data\Large_scale_mapping_NP\Figs paper\1stFigure')
print(gcf, sprintf('%s-10TRRawData-MovBall-%s-U%d-W%d-%dW-speed-500.pdf',NP.recordingName,orderNames{k},u,window_size(1),window_size(2)), '-dpdf', '-r300', '-vector');

end